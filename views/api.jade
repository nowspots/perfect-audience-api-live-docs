mixin displayParameters(parameters, path)
    - var level = 1
    - var baseName = 'params['
    - var currentPath = path
 
    - if (path)
        - currentPath += '.'
        - each name in path.split('.')
            - ++level
            - baseName += name + '][' 

    - each parameter in parameters
        - var paramName = baseName + parameter.Name + ']'

        - if (parameter.Required == 'Y')
            - var required = true
            - var className = 'required'
        - else
            - var required = false
            - var className = ''
        tr(class=className)
            td.name(style='padding-left: ' + (level * 5) + 'px;') #{parameter.Name}
            td.parameter
                - if (parameter.Type != 'parent')
                    input(name=paramName.replace('params[', 'paramTypes['), type='hidden', value=parameter.Type)
                    - if (parameter.Type == 'enumerated')
                        select(name=paramName, placeholder=className)
                          - if (parameter.Default =='')
                              option(value='') 
                          - each choice in parameter.EnumeratedList
                              - if (parameter.Default == choice)
                                      option(value=choice, selected=true) #{choice}
                              - else
                                      option(value=choice) #{choice}
                    - else if (parameter.Type == 'boolean')
                         select(name=paramName, placeholder=className)
                              - if (parameter.Default == '')
                                      option(value='') 
                              - each choice in [apiInfo.booleanTrueVal, apiInfo.booleanFalseVal]
                                 - if (parameter.Default == choice)
                                         option(value=choice, selected=true) #{choice}
                                 - else
                                         option(value=choice) #{choice}
                    - else if (parameter.Type == 'readonly')
                        input(name=paramName, value=parameter.Default, placeholder=className, readonly='readonly')
                    - else if (parameter.Type == 'password')
                        input(name=paramName, value=parameter.Default, placeholder=className, type='password')
                    - else
                        input(name=paramName, value=parameter.Default, placeholder=className)
            td.type=(parameter.Type != 'parent' ? parameter.Type : '')
            td.description
                p=parameter.Description || 'No description'
                - if (parameter.Type =='enumerated' && parameter.EnumeratedDescription)
                    dl.clearfix
                        - each description, choice in parameter.EnumeratedDescription
                            dt #{choice}
                            dd #{description}

        - if (parameter.Type == 'parent')
            mixin displayParameters(parameter.Children, currentPath + parameter.Name)


h1=apiInfo.name 
- if (session.authed && apiInfo.oauth && apiInfo.oauth.type =='three-legged')
    - var authed ='authed'
- else
    - var authed =''

div.welcome
    p
        | Welcome to the
        a(href='https://www.perfectaudience.com', target="_blank") Perfect Audience
        |  Live Documentation! This tool allows existing
        a(href='https://www.perfectaudience.com', target="_blank") Perfect Audience
        |  customers to experiment with the
        a(href='https://www.perfectaudience.com/docs#data_api_autoopen', target="_blank") Performance Reporting API
        | . If you are not yet a customer, click
        a(href='https://www.perfectaudience.com/users/sign_up', target="_blank") here
        |  to sign up.
    p
        | To start using the API, click the "Obtain Authorization Token" link and enter your Perfect Audience login credentials. After you click the 'try it' button, the Authorization token box at the top of this page will be populated with your token. Now you have unlocked access to the rest of the API. Click around!
    p
        | Full documentation is available
        a(href='https://www.perfectaudience.com/docs#data_api_autoopen', target="_blank") here
        | . Please send any questions or comments to
        a(href='mailto:tech@perfectaudience.com') tech@perfectaudience.com
        | .

form#credentials
    input(type='hidden', name='apiName', value=apiName)
    - if (apiInfo.auth.length) 
        section(class='credentials ' + authed)
         - if (authed && apiInfo.oauth)
             span Authenticated with OAuth
             img(src='/images/accept.png')
         - else
             h2 You must obtain an Authorization token using the "Authorization" endpoint before making any other calls.
               img(src='/images/key.png')
             
             - each auth, key in apiInfo.auth
                 - if (key == 'cookie')
                     div.cookie
                         label(for='cookieValue') Cookie
                         input(id='cookieValue', name='cookieValue', value=auth.default, style='color=#EEEEEE')
                 - else if (key == 'header')
                    - if (auth.length)
                        div.headers
                            h3 Headers
                            - each header in auth
                                div
                                    label(for='headers[' + header.name + ']') #{header.name}
                                    input(id='headers[' + header.name + ']', name='headers[' + header.name + ']', value=header.default, style='color=#EEEEEE')
                 - else if (key == 'oauth')
                     input(type='hidden', name='oauth', value='authrequired')
        
                     div
                         label(for='oauthKey') Key
                         input(id='oauthKey', name='oauthKey', value=auth.key, style='color=#EEEEEE')
                         div
                             label(for='oauthSecret') Secret
                             input(id='oauthSecret', name='oauthSecret', value=auth.secret, style='color=#EEEEEE')
                     - if (auth.type != 'two-legged')
                         div
                            input(name='oauth', value='Authenticate with OAuth', type='submit', id='oauth-auth')
                 - else if (key == 'key')
                         label(for='apiKey') API Key
                         input(id='apiKey', name='apiKey', value=auth.default, style='color=#EEEEEE')
                            
                 - if (apiInfo.signature)
                     div
                         label(for='signature') Signature
                         input(id='signature', name='signature', value=apiInfo.signature.default, style='color=#EEEEEE')

div(id='controls')
    ul
        li
            a#toggle-endpoints(href='#') Toggle All Endpoints
        li
            a#toggle-methods(href='#') Toggle All Methods

ul
    - each endpoint in apiDefinition.endpoints
        li.endpoint
            h3.title
                span.name=endpoint.name
                ul.actions
                    li.list-methods
                        a(href='#') List Methods
                    li.expand-methods
                        a(href='#') Expand Methods
            - if (endpoint.methods.length)
            ul.methods.hidden
                - each method in endpoint.methods
                    - var httpmethod =method.HTTPMethod.toLowerCase()
                    - if (method.RequiresOAuth ==='Y' || method.RequiresOAuth ===true)
                        - var secure ='authrequired'
                    - else
                        - var secure =''
                    li(class='method ' + httpmethod + ' ' + secure)
                        div.title
                            span.http-method #{method.HTTPMethod}
                            span.name #{method.MethodName}
                            span.uri #{method.URI}
                        form.hidden
                            input(type='hidden', name='httpMethod', value=method.HTTPMethod)
                            input(type='hidden', name='oauth', value=secure)
                            input(type='hidden', name='methodUri', value=method.URI)
                            input(type='hidden', name='dataFormat', value=method.dataFormat)

                            span.description #{method.Synopsis}
                            br
                            br
                            - if (method.parameters.length > 0)
                                table.parameters
                                    thead
                                        tr
                                            th Parameter
                                            th Value
                                            th Type
                                            th Description
                                    tbody
                                        mixin displayParameters(method.parameters, '')

                            - if (method.headers && method.headers.length > 0)
                                // Create header fields and button to add/remove headers.
                                div.headers
                                    h4.title
                                        div.indicator
                                        span Headers
                                    div.fields
                                        table
                                            colgroup
                                                col(class='name')
                                                col(class='value')
                                                col(class='remove')
                                            thead
                                                tr
                                                    th Name
                                                    th(colspan='2') Value
                                            tbody
                                                tr
                                                    td
                                                        input(name='headerNames[]', placeholder='Name')
                                                    td
                                                        input(name='headerValues[]', placeholder='Value')
                                                    td
                                                        a(href='#', class='remove') Remove
                                        a(href='#', class='add-headers') Add Header

                            - if (!method['read-only'])
                                input(type='submit', id=method.MethodName, value='Try it!')
